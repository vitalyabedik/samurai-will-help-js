//============================== Классы ================================

//============================== Введение ================================
// Что такое ООП?

// Способы создания объектов в ООП

//============================== Создание объектов с помощью функции-конструктора =========
/*
Создайте объект Animal с помощью функции-конструктора у которого будет свойство name
и метод getPetName, который получает имя животного.
Создайте 2ух животных : cat и dog

Вывести в консоль созданные объекты, имена животных путем обращения к свойству name
и путем вызова метода getPetName
 */


//============================== Создание объектов с помощью класса =========
// Как создать класс и какие основные блоки у него есть?


// Что такое конструктор и для чего он нужен?



// Как работают классы под капотом?


// Чему равен typeof класса?


// Как создать свойство в классе?


// Как вызывать созданный класс?


// Перепиши пример выше с помощью класса


//============================== Принципы ООП ======================================

// Какие есть принципы ООП?

//============================== Наследование ======================================
/*
Создайте класс Human с помощью класса у которого будут свойства name и age
и метод sayHello (`Всем привет меня зовут ИМЯ__ЧЕЛОВЕКА, мне ВОЗРАСТ__ЧЕЛОВЕКА`
Создайте человека (объект) используя класс

Вывести в консоль созданный объект, а также пусть он поприветствует всех
 */



//============================== Ключевое слово super ======================================

// Для чего нужен ключевое слово super?

// super в constructor

// Что будет если не написать super?

// super для переопределения методов

// переопределение constructor

// переопределение метода


/* Создайте новый класс Programmer наследуясь от класса Human, со свойствами родителя
и добавьте собственное свойство webDevelopmentSkills
Создайте программиста (объект) используя класс

Вывести в консоль созданный объект, выведите webDevelopmentSkills,
а также пусть он поприветствует всех

Попробуйте добавить sayHello в класс Programmer и посмотрите что будет

Добавьте метод showMyProgrammingSkills, который выводит:
`Мой текущий стек ТЕКУЩИЙ_СТЕК_ОБЪЕКТА`

Добавьте метод startCoding, который выводит:
'Я пошел кодить'
 */





// Как проверить принадлежит ли наш класс Programmer классу Human?





//============================== Инкапсуляция ======================================


/* Создайте новый класс Developer со свойствами name и programmingLanguage.
Создайте методы: startCoding и printProgrammingLanguage, которые выводят:
`ИМЯ_РАЗРАБОТЧИКА начинает писать код`
`Язык программирования: ЯЗЫК_ПРОГРАММИРОВАНИЯ`

Создайте девелопера (объект) используя класс

Вывести в консоль все
 */


/*
Создайте новый класс JuniorDeveloper наследуясь от класса Developer, со свойствами родителя
и добавьте собственное свойство webDevelopmentSkills
Создайте программиста (объект) используя класс

Вывести в консоль созданный объект, выведите webDevelopmentSkills,
а также пусть он поприветствует всех

Попробуйте добавить sayHello в класс Programmer и посмотрите что будет

Добавьте метод showMyProgrammingSkills, который выводит:
`Мой текущий стек ТЕКУЩИЙ_СТЕК_ОБЪЕКТА`

Добавьте метод startCoding, который выводит:
'Я пошел кодить'
 */



//============================== Публичные свойства и методы (public) ======================================
// Что такое публичные свойства и методы (public)


//============================== Приватные свойства и методы (private # ======================================

// Что такое приватные свойства и методы (private #)


// Но иногда нам нужно получать доступ к приватным полям, а также их изменять


//============================== Геттеры/Сеттеры ======================================
// Что такое геттеры и сеттеры?



//============================== Полиморфизм ======================================
// Что такое Полиморфизм?



//============================== Абстракция ======================================
// Что такое Абстракция?




//============================== Статические свойства и методы (static) ======================================

// Что такое статическое свойства или метод и как его создать


// пример использования static для задания начальных значений



//============================== Примеси ======================================

// Для чего придумали примеси? Как реализовать?
